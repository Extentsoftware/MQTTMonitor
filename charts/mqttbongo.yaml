apiVersion: apps/v1
kind: Deployment
metadata:
  name: influxdb
  labels:
      environment: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: influxdb
  template:
    metadata:
      labels:
        app: influxdb
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: influxdb
        image: influxdb:1.7
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
        ports:
        - containerPort: 8086
          name: influxdb
        env:
        - name: INFLUXDB_USER
          value: "root"          
        - name: INFLUXDB_USER_PASSWORD
          value: "root"          
        - name: INFLUXDB_DB
          value: "home_db"          
---
apiVersion: v1
kind: Service
metadata:
  name: influxdb
  labels:
      environment: dev
spec:
  ports:
  - port: 8086
  selector:
    app: influxdb
---    
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mqttbridge
  labels:
      environment: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mqttbridge
  template:
    metadata:
      labels:
        app: mqttbridge
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: mqttbridge
        image: gluteusmaximus/mqttbridge
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
        env:
        - name: INFLUXDB_ADDRESS
          value: "influxdb"
        - name: MOSQUITTO_ADDRESS
          value: "mosquitto"
---    
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mosquitto
  labels:
      environment: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mosquitto
  template:
    metadata:
      labels:
        app: mosquitto
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: mosquitto
        image: eclipse-mosquitto:1.6
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
        ports:
        - containerPort: 1883
          name: mosquitto
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/azure-dns-label-name: mosquitto
    service.beta.kubernetes.io/azure-load-balancer-resource-group: MC_Bongo_Bongo_uksouth
  name: mosquitto
  labels:
    environment: devs
spec:
  loadBalancerIP: 20.49.146.32
  type: LoadBalancer
  ports:
  - port: 1883
    protocol: TCP
    targetPort: 1883
  selector:
    app: mosquitto
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
      environment: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: grafana
        image: grafana/grafana:5.4.3
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
        ports:
        - containerPort: 3000
          name: grafana
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
      environment: dev
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: grafana
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: mqttbongo-ingress-static
  namespace: dev
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: grafana
          servicePort: 80
        path: /(.*)
    host: bongo.uksouth.cloudapp.azure.com

